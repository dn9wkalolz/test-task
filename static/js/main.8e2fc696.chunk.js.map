{"version":3,"sources":["Components/Header.tsx","Components/Footer.tsx","store/types.ts","store/appReducer.ts","Components/PageSwitcher.tsx","Components/Alert.tsx","constants/appconstants.ts","Components/SearchArea.tsx","Components/Cards.tsx","Components/ImageFinder.tsx","constants/appMethods.ts","Components/Bookmarks.tsx","Components/NavTabs.tsx","App.tsx","store/rootReducer.ts","index.tsx"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","Header","classes","AppBar","position","Toolbar","className","Typography","variant","color","noWrap","footer","backgroundColor","palette","background","paper","padding","Footer","align","Link","href","Date","getFullYear","SET_PHOTOS","SET_PAGE","SET_ROWS_PER_PAGE","SET_BOOKMARKS","InitialState","photos","page","rowsPerPage","bookmarks","actions","type","payload","selectAppState","state","app","PageSwitcher","dispatch","useDispatch","useSelector","Container","maxWidth","TablePagination","component","count","length","onChangePage","e","newPage","rowsPerPageOptions","onChangeRowsPerPage","newRowsValue","parseInt","target","value","createStyles","root","width","marginTop","FetchAlert","Alert","severity","BUTTONS_NAME","BOOKMARK","REMOVE","TAB_BUTTONS","label","SearchIcon","BookmarkBorderIcon","searchArea","SearchArea","useState","input","setInput","isLoading","setLoading","isError","setError","fetchInput","a","process","REACT_APP_API_KEY","REACT_APP_API_URL_BASE","fetch","response","json","result","photo","setTimeout","TextField","style","margin","placeholder","helperText","fullWidth","onChange","onKeyDown","key","disabled","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","Cards","buttonName","paginatedPhotos","handleDisabled","some","bookmark","id","Grid","container","map","item","xs","sm","md","Card","CardMedia","image","url_n","title","CardContent","gutterBottom","CardActions","Button","size","onClick","updatedBookmarks","localStorage","setItem","JSON","stringify","filter","handleClick","cardGrid","paddingBottom","ImageFinder","setPaginatedPhotos","useEffect","rows","getPageLimit","min","max","paginatedResult","_","idx","Bookmarks","tabs","minWidth","tab","main","minHeight","TabPanel","children","index","role","hidden","Box","p","NavTabs","setValue","Tabs","orientation","event","newValue","button","Tab","App","getItem","parse","CssBaseline","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e2fc696.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Image Finder\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://github.com/dn9wkalolz\">\n          Github\n        </Link>\n        {' '}\n        {new Date().getFullYear()}\n        .\n      </Typography>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const SET_PHOTOS = 'SET_PHOTOS';\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_ROWS_PER_PAGE = 'SET_ROWS_PER_PAGE';\nexport const SET_BOOKMARKS = 'SET_BOOKMARKS';\n","// eslint-disable-next-line import/no-cycle\nimport { InferActionsTypes, RootState } from './rootReducer';\nimport { IPhoto } from '../intefaces/flickr';\nimport {\n  SET_PAGE, SET_ROWS_PER_PAGE, SET_PHOTOS, SET_BOOKMARKS,\n} from './types';\n\nconst InitialState = {\n  photos: [] as IPhoto[],\n  page: 0,\n  rowsPerPage: 10,\n  bookmarks: [] as IPhoto[],\n};\n\nexport const appReducer = (state = InitialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case SET_PHOTOS:\n    case SET_ROWS_PER_PAGE:\n    case SET_PAGE:\n    case SET_BOOKMARKS:\n      return { ...state, ...action.payload };\n    default: return state;\n  }\n};\n\nexport const actions = {\n  setPhotos: (photos: IPhoto[]) => ({\n    type: SET_PHOTOS,\n    payload: {\n      photos,\n    },\n  } as const),\n  setPage: (page: number) => ({\n    type: SET_PAGE,\n    payload: {\n      page,\n    },\n  } as const),\n  setRowsPerPage: (rowsPerPage: number) => ({\n    type: SET_ROWS_PER_PAGE,\n    payload: {\n      rowsPerPage,\n    },\n  } as const),\n  setBookmarks: (bookmarks: IPhoto[]) => ({\n    type: SET_BOOKMARKS,\n    payload: {\n      bookmarks,\n    },\n  }),\n};\n\nexport const selectAppState = (state: RootState): InitialStateType => state.app;\n\ntype ActionsType = InferActionsTypes<typeof actions>;\ntype InitialStateType = typeof InitialState;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Container from '@material-ui/core/Container';\nimport { actions, selectAppState } from '../store/appReducer';\n\nconst PageSwitcher: React.FC = () => {\n  const dispatch = useDispatch();\n  const { page, rowsPerPage, photos } = useSelector(selectAppState);\n\n  const handleChangePage = (e: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\n    dispatch(actions.setPage(newPage));\n  };\n\n  const handleChangeRowsPerPage = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const newRowsValue = parseInt(e.target.value, 10);\n    dispatch(actions.setRowsPerPage(newRowsValue));\n    dispatch(actions.setPage(0));\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <TablePagination\n        component=\"div\"\n        count={photos.length}\n        page={page}\n        onChangePage={handleChangePage}\n        rowsPerPageOptions={[10, 25]}\n        rowsPerPage={rowsPerPage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Container>\n  );\n};\n\nexport default PageSwitcher;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst FetchAlert: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Alert variant=\"outlined\" severity=\"error\">\n        Oops something went wrong, please try again!\n      </Alert>\n    </div>\n  );\n};\n\nexport default FetchAlert;\n","import SearchIcon from '@material-ui/icons/Search';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\n\nexport const BUTTONS_NAME = {\n  BOOKMARK: 'bookmark it!',\n  REMOVE: 'remove it!',\n  TAB_BUTTONS: [{ label: 'finder', icon: SearchIcon }, { label: 'bookmarks', icon: BookmarkBorderIcon }],\n};\n\nexport const API_ADDITIONAL_OPTIONS = '&tag_mode=all&extras=url_n&format=json&nojsoncallback=1';\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport FetchAlert from './Alert';\nimport { IResult } from '../intefaces/flickr';\nimport { actions } from '../store/appReducer';\nimport { API_ADDITIONAL_OPTIONS } from '../constants/appconstants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  searchArea: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 2),\n  },\n}));\n\nconst SearchArea: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [input, setInput] = useState<string>('');\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isError, setError] = useState<boolean>(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInput(e.target.value);\n  };\n\n  const fetchInput = async (value: string) => {\n    try {\n      if (value.length === 0) return;\n      const { REACT_APP_API_KEY, REACT_APP_API_URL_BASE } = process.env;\n      setLoading(true);\n      const response = await fetch(`${REACT_APP_API_URL_BASE}method=flickr.photos.search&api_key=${REACT_APP_API_KEY}&tags=${value}${API_ADDITIONAL_OPTIONS}`);\n      const result: IResult = await response.json();\n      const { photos: { photo } } = result;\n      dispatch(actions.setPhotos(photo));\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n      setError(true);\n      setTimeout(() => setError(false), 4000);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const { value } = e.target as HTMLInputElement;\n    fetchInput(value);\n  };\n\n  return (\n    <div className={classes.searchArea}>\n      <Container maxWidth=\"sm\">\n        <TextField\n          label=\"Start Typing\"\n          style={{ margin: 8 }}\n          placeholder=\"Name must be at least one character\"\n          helperText=\"Press Enter to start search\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          value={input}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          disabled={isLoading}\n        />\n        {isError && <FetchAlert />}\n      </Container>\n\n    </div>\n  );\n};\n\nexport default SearchArea;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { IPhoto } from '../intefaces/flickr';\nimport { actions, selectAppState } from '../store/appReducer';\nimport { BUTTONS_NAME } from '../constants/appconstants';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\ninterface ICards {\n  buttonName: string\n  paginatedPhotos: IPhoto[]\n}\n\nconst Cards: React.FC<ICards> = ({ buttonName, paginatedPhotos }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { bookmarks } = useSelector(selectAppState);\n  const { BOOKMARK } = BUTTONS_NAME;\n\n  const handleClick = (photo: IPhoto) => {\n    if (buttonName === BOOKMARK) {\n      const updatedBookmarks = [...bookmarks, photo];\n      localStorage.setItem('bookmarks', JSON.stringify(updatedBookmarks));\n      dispatch(actions.setBookmarks(updatedBookmarks));\n    } else {\n      const updatedBookmarks = bookmarks.filter((bookmark) => bookmark.id !== photo.id);\n      localStorage.setItem('bookmarks', JSON.stringify(updatedBookmarks));\n      dispatch(actions.setBookmarks(updatedBookmarks));\n    }\n  };\n\n  const handleDisabled = (photo: IPhoto) => {\n    const isDisabled = bookmarks.some(\n      (bookmark) => bookmark.id === photo.id && buttonName === BOOKMARK,\n    );\n    return isDisabled;\n  };\n\n  return (\n    <Grid container spacing={4}>\n      {paginatedPhotos.map((photo) => (\n        <Grid item key={photo.id} xs={12} sm={6} md={4}>\n          <Card className={classes.card}>\n            <CardMedia\n              className={classes.cardMedia}\n              image={photo.url_n}\n              title={photo.title}\n            />\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {photo.title}\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                disabled={handleDisabled(photo)}\n                onClick={() => handleClick(photo)}\n              >\n                {buttonName}\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TablePaginationDemo from './PageSwitcher';\nimport SearchArea from './SearchArea';\nimport Cards from './Cards';\nimport { selectAppState } from '../store/appReducer';\nimport { getPageLimit } from '../constants/appMethods';\nimport { BUTTONS_NAME } from '../constants/appconstants';\nimport { IPhoto } from '../intefaces/flickr';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nconst ImageFinder: React.FC = () => {\n  const classes = useStyles();\n  const { BOOKMARK } = BUTTONS_NAME;\n  const { page, rowsPerPage, photos } = useSelector(selectAppState);\n  const [paginatedPhotos, setPaginatedPhotos] = useState<IPhoto[]>([]);\n\n  useEffect(() => {\n    const [min, max] = getPageLimit(page, rowsPerPage);\n    const paginatedResult = photos.filter((_, idx) => idx >= min && idx <= max);\n    setPaginatedPhotos(paginatedResult);\n  }, [page, photos]);\n\n  return (\n    <>\n      <SearchArea />\n      <TablePaginationDemo />\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {paginatedPhotos.length !== 0\n          ? <Cards buttonName={BOOKMARK} paginatedPhotos={paginatedPhotos} />\n          : <div>No image here</div>}\n      </Container>\n    </>\n  );\n};\n\nexport default ImageFinder;\n","export const getPageLimit = (\n  page: number, rows: number,\n): number[] => [page * rows, page * rows + rows - 1];\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Cards from './Cards';\nimport { selectAppState } from '../store/appReducer';\nimport { BUTTONS_NAME } from '../constants/appconstants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nconst Bookmarks: React.FC = () => {\n  const classes = useStyles();\n  const { bookmarks } = useSelector(selectAppState);\n  const { REMOVE } = BUTTONS_NAME;\n\n  return (\n    <>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        {bookmarks.length !== 0\n          ? <Cards buttonName={REMOVE} paginatedPhotos={bookmarks} />\n          : <div>No image here</div>}\n      </Container>\n    </>\n  );\n};\n\nexport default Bookmarks;\n","import React, { useState } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport ImageFinder from './ImageFinder';\nimport Bookmarks from './Bookmarks';\nimport { BUTTONS_NAME } from '../constants/appconstants';\n\ninterface ITabPanel {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    minWidth: '100px',\n  },\n  tab: {\n    minWidth: 'calc(100% - 100px)',\n  },\n  main: {\n    minHeight: 'calc(88vh - 116px)',\n  },\n}));\n\nconst TabPanel: React.FC<ITabPanel> = ({ children, index, value }) => {\n  const classes = useStyles();\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      className={classes.tab}\n    >\n      {value === index && (\n      <Box p={3}>\n        {children}\n      </Box>\n      )}\n    </div>\n  );\n};\n\nconst NavTabs: React.FC = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState<number>(0);\n  const { TAB_BUTTONS } = BUTTONS_NAME;\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Tabs\n        className={classes.tabs}\n        orientation=\"vertical\"\n        value={value}\n        onChange={handleChange}\n      >\n        {TAB_BUTTONS.map((button) => (<Tab key={button.label} icon={<button.icon />} />))}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <main className={classes.main}>\n          <ImageFinder />\n        </main>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <main className={classes.main}>\n          <Bookmarks />\n        </main>\n      </TabPanel>\n    </div>\n  );\n};\n\nexport default NavTabs;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport NavTabs from './Components/NavTabs';\nimport { actions } from './store/appReducer';\nimport { IPhoto } from './intefaces/flickr';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const result = localStorage.getItem('bookmarks');\n    if (!result || result.length === 0) return;\n    const bookmarks: IPhoto[] = JSON.parse(result);\n    dispatch(actions.setBookmarks(bookmarks));\n  }, []);\n\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <NavTabs />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n// eslint-disable-next-line import/no-cycle\nimport { appReducer } from './appReducer';\n\nexport const rootReducer = combineReducers({\n  app: appReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport type InferActionsTypes<T> = T extends {\n  [key: string]: (...args: any[]) => infer U\n} ? U : never;\n","import React from 'react';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { rootReducer } from './store/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(\n  app,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}